type User {
  id: ID!
  email: String! @search(by: [exact, trigram])
  username: String! @search(by: [exact, trigram])
  fullName: String! @search(by: [exact, trigram])
  authData: AuthData @hasInverse(field: user)
  follows: [User!] @hasInverse(field: followers)
  followers: [User!] @hasInverse(field: follows)
  posts: [Post] @hasInverse(field: user)
}

type AuthProvider {
  id: ID!
  name: String! @search(by: [exact])
}

type AuthData {
  id: ID!
  provider: AuthProvider!
  sub: String! @id
  user: User @hasInverse(field: authData)
}

type Post {
  id: ID!
  text: String
  created: DateTime! @search(by: [day])
  updated: DateTime! @search(by: [day])
  user: User! @hasInverse(field: posts)
  likes: [User!]
  children: [Post!]
  parent: Post
}

